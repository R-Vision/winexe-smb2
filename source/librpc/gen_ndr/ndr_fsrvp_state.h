/* header auto-generated by pidl */

#include "librpc/ndr/libndr.h"
#include "bin/default/librpc/gen_ndr/fsrvp_state.h"

#ifndef _HEADER_NDR_fsrvp_state
#define _HEADER_NDR_fsrvp_state

#define NDR_FSRVP_STATE_CALL_COUNT (0)
enum ndr_err_code ndr_push_fsrvp_state_smap(struct ndr_push *ndr, int ndr_flags, const struct fsrvp_state_smap *r);
enum ndr_err_code ndr_pull_fsrvp_state_smap(struct ndr_pull *ndr, int ndr_flags, struct fsrvp_state_smap *r);
void ndr_print_fsrvp_state_smap(struct ndr_print *ndr, const char *name, const struct fsrvp_state_smap *r);
enum ndr_err_code ndr_push_fsrvp_state_sc(struct ndr_push *ndr, int ndr_flags, const struct fsrvp_state_sc *r);
enum ndr_err_code ndr_pull_fsrvp_state_sc(struct ndr_pull *ndr, int ndr_flags, struct fsrvp_state_sc *r);
void ndr_print_fsrvp_state_sc(struct ndr_print *ndr, const char *name, const struct fsrvp_state_sc *r);
enum ndr_err_code ndr_push_fsrvp_state_sc_set(struct ndr_push *ndr, int ndr_flags, const struct fsrvp_state_sc_set *r);
enum ndr_err_code ndr_pull_fsrvp_state_sc_set(struct ndr_pull *ndr, int ndr_flags, struct fsrvp_state_sc_set *r);
void ndr_print_fsrvp_state_sc_set(struct ndr_print *ndr, const char *name, const struct fsrvp_state_sc_set *r);
#endif /* _HEADER_NDR_fsrvp_state */
