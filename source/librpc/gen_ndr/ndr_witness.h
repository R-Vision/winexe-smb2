/* header auto-generated by pidl */

#include "librpc/ndr/libndr.h"
#include "bin/default/librpc/gen_ndr/witness.h"

#ifndef _HEADER_NDR_witness
#define _HEADER_NDR_witness

#include "../librpc/ndr/ndr_witness.h"
#define NDR_WITNESS_UUID "ccd8c074-d0e5-4a40-92b4-d074faa6ba28"
#define NDR_WITNESS_VERSION 65537
#define NDR_WITNESS_NAME "witness"
#define NDR_WITNESS_HELPSTRING "SMB Witness Service"
extern const struct ndr_interface_table ndr_table_witness;
#define NDR_WITNESS_GETINTERFACELIST (0x00)

#define NDR_WITNESS_REGISTER (0x01)

#define NDR_WITNESS_UNREGISTER (0x02)

#define NDR_WITNESS_ASYNCNOTIFY (0x03)

#define NDR_WITNESS_REGISTEREX (0x04)

#define NDR_WITNESS_CALL_COUNT (5)
void ndr_print_witness_version(struct ndr_print *ndr, const char *name, enum witness_version r);
void ndr_print_witness_interfaceInfo_state(struct ndr_print *ndr, const char *name, enum witness_interfaceInfo_state r);
void ndr_print_witness_interfaceInfo_flags(struct ndr_print *ndr, const char *name, uint32_t r);
void ndr_print_witness_interfaceInfo(struct ndr_print *ndr, const char *name, const struct witness_interfaceInfo *r);
void ndr_print_witness_interfaceList(struct ndr_print *ndr, const char *name, const struct witness_interfaceList *r);
enum ndr_err_code ndr_push_witness_notifyResponse_type(struct ndr_push *ndr, int ndr_flags, enum witness_notifyResponse_type r);
enum ndr_err_code ndr_pull_witness_notifyResponse_type(struct ndr_pull *ndr, int ndr_flags, enum witness_notifyResponse_type *r);
void ndr_print_witness_notifyResponse_type(struct ndr_print *ndr, const char *name, enum witness_notifyResponse_type r);
void ndr_print_witness_ResourceChange_type(struct ndr_print *ndr, const char *name, enum witness_ResourceChange_type r);
enum ndr_err_code ndr_push_witness_ResourceChange(struct ndr_push *ndr, int ndr_flags, const struct witness_ResourceChange *r);
enum ndr_err_code ndr_pull_witness_ResourceChange(struct ndr_pull *ndr, int ndr_flags, struct witness_ResourceChange *r);
void ndr_print_witness_ResourceChange(struct ndr_print *ndr, const char *name, const struct witness_ResourceChange *r);
size_t ndr_size_witness_ResourceChange(const struct witness_ResourceChange *r, int flags);
void ndr_print_witness_IPaddrInfo_flags(struct ndr_print *ndr, const char *name, uint32_t r);
void ndr_print_witness_IPaddrInfo(struct ndr_print *ndr, const char *name, const struct witness_IPaddrInfo *r);
void ndr_print_witness_IPaddrInfoList(struct ndr_print *ndr, const char *name, const struct witness_IPaddrInfoList *r);
enum ndr_err_code ndr_push_witness_notifyResponse_message(struct ndr_push *ndr, int ndr_flags, const union witness_notifyResponse_message *r);
enum ndr_err_code ndr_pull_witness_notifyResponse_message(struct ndr_pull *ndr, int ndr_flags, union witness_notifyResponse_message *r);
void ndr_print_witness_notifyResponse_message(struct ndr_print *ndr, const char *name, const union witness_notifyResponse_message *r);
enum ndr_err_code ndr_push_witness_notifyResponse(struct ndr_push *ndr, int ndr_flags, const struct witness_notifyResponse *r);
enum ndr_err_code ndr_pull_witness_notifyResponse(struct ndr_pull *ndr, int ndr_flags, struct witness_notifyResponse *r);
void ndr_print_witness_notifyResponse(struct ndr_print *ndr, const char *name, const struct witness_notifyResponse *r);
size_t ndr_size_witness_notifyResponse(const struct witness_notifyResponse *r, int flags);
void ndr_print_witness_RegisterEx_flags(struct ndr_print *ndr, const char *name, uint32_t r);
enum ndr_err_code ndr_push_witness_GetInterfaceList(struct ndr_push *ndr, int flags, const struct witness_GetInterfaceList *r);
enum ndr_err_code ndr_pull_witness_GetInterfaceList(struct ndr_pull *ndr, int flags, struct witness_GetInterfaceList *r);
void ndr_print_witness_GetInterfaceList(struct ndr_print *ndr, const char *name, int flags, const struct witness_GetInterfaceList *r);
enum ndr_err_code ndr_push_witness_Register(struct ndr_push *ndr, int flags, const struct witness_Register *r);
enum ndr_err_code ndr_pull_witness_Register(struct ndr_pull *ndr, int flags, struct witness_Register *r);
void ndr_print_witness_Register(struct ndr_print *ndr, const char *name, int flags, const struct witness_Register *r);
enum ndr_err_code ndr_push_witness_UnRegister(struct ndr_push *ndr, int flags, const struct witness_UnRegister *r);
enum ndr_err_code ndr_pull_witness_UnRegister(struct ndr_pull *ndr, int flags, struct witness_UnRegister *r);
void ndr_print_witness_UnRegister(struct ndr_print *ndr, const char *name, int flags, const struct witness_UnRegister *r);
enum ndr_err_code ndr_push_witness_AsyncNotify(struct ndr_push *ndr, int flags, const struct witness_AsyncNotify *r);
enum ndr_err_code ndr_pull_witness_AsyncNotify(struct ndr_pull *ndr, int flags, struct witness_AsyncNotify *r);
void ndr_print_witness_AsyncNotify(struct ndr_print *ndr, const char *name, int flags, const struct witness_AsyncNotify *r);
void ndr_print_witness_RegisterEx(struct ndr_print *ndr, const char *name, int flags, const struct witness_RegisterEx *r);
#endif /* _HEADER_NDR_witness */
